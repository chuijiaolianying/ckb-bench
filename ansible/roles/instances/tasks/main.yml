- name: Copy ckb logrotate file
  become: true
  template:
    src: templates/ckb.logrotate.j2
    dest: /etc/logrotate.d/ckb
  tags: ckb_service

- name: Stop ckb service
  become: true
  service:
    name: ckb.service
    state: stopped
  ignore_errors: true
  tags: [ckb_service, update_ckb_service]

# 10.0.1.100 is hardcoded, it's private ip of bastion
- name: Copy ckb binary from bastion
  shell: |
    scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 10.0.1.100:{{ checkouts }}/ckb/target/release/ckb /tmp
    sudo cp /tmp/ckb /usr/local/bin/ckb
  tags: [ckb_service, update_ckb_service]

- name: Copy ckb service file from bastion
  shell: |
    scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null 10.0.1.100:{{ checkouts }}/ckb/devtools/init/linux-systemd/ckb.service /tmp
    sudo cp /tmp/ckb.service /etc/systemd/system/ckb.service
  tags: ckb_service

- name: Init ckb config files
  become: true
  # QmUsp8guKsvAGeWYoLm2J7o544MCLg3nfGNtP7TvosR5kg is hardcoded, it's the public key of `bootnode/files/secret_key`
  # 0485cb50375f3134d0a0e5491852e3a99124a55d28c59498a6b2b39da4b4d41f961ed24d966110e435e2c4843443b1b458de2018e195860e2a9c4fa18cdb15e4d1 is hardcoded,
  # it's the public key of private key `9c7db25395517b0e927906ceadb62d9a862ba69c4276d93473ee0bec892acdc9`
  shell: |
    chown root:root /usr/local/bin/ckb
    chmod 755 /usr/local/bin/ckb

    mkdir -p {{ run_folder }}
    ckb init $(ckb cli secp256k1-lock 0485cb50375f3134d0a0e5491852e3a99124a55d28c59498a6b2b39da4b4d41f961ed24d966110e435e2c4843443b1b458de2018e195860e2a9c4fa18cdb15e4d1 --format cmd) -C {{ run_folder }} --chain dev --force

    chown -R ckb:ckb {{ run_folder }}
    chmod 755 {{ run_folder }}
    chmod 644 {{ run_folder }}/ckb.toml {{ run_folder }}/ckb-miner.toml {{ run_folder }}/specs/dev.toml
    sed -i 's_bootnodes = \[\]_bootnodes = ["/ip4/{{ hostvars[groups.instances.0].ansible_host }}/tcp/8115/p2p/QmUsp8guKsvAGeWYoLm2J7o544MCLg3nfGNtP7TvosR5kg"]_g' {{ run_folder }}/ckb.toml
    sed -i 's_127.0.0.1:8114_0.0.0.0:8114_g' {{ run_folder }}/ckb.toml
    sed -i 's_filter = "info"_filter = "info,ckb-network=debug,ckb-sync=debug,ckb-relay=debug,ckb-tx-pool=debug"_g' {{ run_folder }}/ckb.toml
    sed -i 's/log_to_stdout = true/log_to_stdout = false/g' {{ run_folder }}/ckb.toml
    sed -i 's/max_mem_size = 2/max_mem_size = 4/g' {{ run_folder }}/ckb.toml
    sed -i 's/max_cycles = 2/max_cycles = 4/g' {{ run_folder }}/ckb.toml

    sed -i 's/1_250_000_00000000/12_500_000_00000000/g' {{ run_folder }}/specs/dev.toml

    chown root:root /etc/systemd/system/ckb.service
    chmod 644 /etc/systemd/system/ckb.service
    systemctl daemon-reload
  tags: ckb_service

- name: Start ckb service
  become: true
  service:
    name: ckb.service
    state: started
  tags: [ckb_service, update_ckb_service]

- name: Update /etc/netdata/netdata.conf
  become: true
  template:
    src: templates/netdata.conf.j2
    dest: /etc/netdata/netdata.conf
  tags: netdata

- name: Update /etc/netdata/stream.conf
  become: true
  template:
    src: templates/stream.conf.j2
    dest: /etc/netdata/stream.conf
  tags: netdata

- name: Link python3 yaml package
  become: true
  file:
    src: /usr/lib/python3/dist-packages/yaml
    dest: /usr/lib/x86_64-linux-gnu/netdata/python.d/python_modules/pyyaml3
    state: link
  tags: netdata

- name: Link python3 bin
  become: true
  file:
    src: /usr/bin/python3.6
    dest: /usr/lib/x86_64-linux-gnu/netdata/python
    state: link
  tags: netdata

- name: Copy ckb chart plugin
  become: true
  copy:
    src: files/ckb.chart.py
    dest: /usr/lib/x86_64-linux-gnu/netdata/python.d/ckb.chart.py
  tags: netdata

- name: Restart netdata service
  become: true
  service:
    name: netdata
    state: restarted
  tags: netdata
