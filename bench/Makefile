VERBOSE := $(if ${CI},--verbose,)
CLIPPY_OPTS := -D warnings -D clippy::clone_on_ref_ptr -D clippy::enum_glob_use -D clippy::fallible_impl_from

##@ Testing
test: ## Run all tests.
	cargo test ${VERBOSE} --all -- --nocapture

##@ Building
check: 
	cargo check ${VERBOSE} --all --all-targets

build: ## Build binary with release profile.
	cargo build ${VERBOSE} --release

##@ Code Quality
fmt:
	cargo fmt ${VERBOSE} --all -- --check

clippy:
	cargo clippy ${VERBOSE} --all --all-targets --all-features -- ${CLIPPY_OPTS}

##@ Cleanup
clean: ## Clean files generated by `ckb init`
	rm -rf data/

##@ Helpers

stats: ## Counting lines of code.
	@cargo count --version || cargo +nightly install --git https://github.com/kbknapp/cargo-count
	@cargo count --separator , --unsafe-statistics

help:  ## Display help message.
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

.PHONY: build prod prod-test prod-docker docker docker-publish
.PHONY: gen gen-clean clean clean-all check-cfbc-version
.PHONY: fmt test clippy doc doc-deps gen-doc gen-hashes check stats check-dirty-doc cov
.PHONY: ci security-audit
.PHONY: integration integration-release setup-ckb-test
